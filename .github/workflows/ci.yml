name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  client:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./client/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm test

  server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5433/accountnt-test?schema=public

    strategy:
      matrix:
        node-version: [16.x]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: accountnt-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: ./server/package-lock.json
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npx prisma migrate dev
      - run: npm test
